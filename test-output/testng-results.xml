<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" ignored="0" total="21" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG Suite" duration-ms="170167" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:29:53 IST">
    <groups>
      <group name="Basic">
        <method signature="TestNGFeature.loginTest()[pri:0, instance:com.test.TestNGFeature@31f924f5]" name="loginTest" class="com.test.TestNGFeature"/>
        <method signature="TestNGFeature.urlLaunch()[pri:1, instance:com.test.TestNGFeature@31f924f5]" name="urlLaunch" class="com.test.TestNGFeature"/>
      </group> <!-- Basic -->
    </groups>
    <test name="Basics TestNG" duration-ms="170167" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:29:53 IST">
      <class name="com.test.ExceptionTimeoutTest">
        <test-method status="PASS" signature="infiniteLoop()[pri:0, instance:com.test.ExceptionTimeoutTest@319b92f3]" name="infiniteLoop" duration-ms="18" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:27:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- infiniteLoop -->
      </class> <!-- com.test.ExceptionTimeoutTest -->
      <class name="com.test.GoogleTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="45841" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:27:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="test1" duration-ms="16" started-at="2019-11-27T22:27:49 IST" finished-at="2019-11-27T22:27:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="846" started-at="2019-11-27T22:27:49 IST" finished-at="2019-11-27T22:27:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="22861" started-at="2019-11-27T22:27:50 IST" finished-at="2019-11-27T22:28:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="test2" duration-ms="38078" started-at="2019-11-27T22:28:13 IST" finished-at="2019-11-27T22:28:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="868" started-at="2019-11-27T22:28:51 IST" finished-at="2019-11-27T22:28:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="beforeMethod" is-config="true" duration-ms="20547" started-at="2019-11-27T22:28:52 IST" finished-at="2019-11-27T22:29:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test3()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="test3" duration-ms="40071" started-at="2019-11-27T22:29:12 IST" finished-at="2019-11-27T22:29:53 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Gm ail"}
  (Session info: chrome=78.0.3904.108)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'UTPAL', ip: '192.168.225.196', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 77.0.3865.40 (f484704e052e0..., userDataDir: C:\Users\UTPALF~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58012}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 71506806d135fda9b8274c2a75e48dac
*** Element info: {Using=link text, value=Gm ail}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Gm ail"}
  (Session info: chrome=78.0.3904.108)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'UTPAL', ip: '192.168.225.196', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_212'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 77.0.3865.40 (f484704e052e0..., userDataDir: C:\Users\UTPALF~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:58012}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 71506806d135fda9b8274c2a75e48dac
*** Element info: {Using=link text, value=Gm ail}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:380)
at org.openqa.selenium.By$ByLinkText.findElement(By.java:220)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.test.GoogleTest.test3(GoogleTest.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.GoogleTest@27d415d9]" name="afterMethod" is-config="true" duration-ms="827" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.test.GoogleTest -->
      <class name="com.test.ExpectedException">
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.ExpectedException@fcd6521]" name="test" duration-ms="2" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:27:03 IST">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: "100A"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: "100A"
at java.lang.NumberFormatException.forInputString(Unknown Source)
at java.lang.Integer.parseInt(Unknown Source)
at java.lang.Integer.parseInt(Unknown Source)
at com.test.ExpectedException.test(ExpectedException.java:11)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.test.ExpectedException -->
      <class name="com.test.TestNGFeature">
        <test-method status="FAIL" signature="loginTest()[pri:0, instance:com.test.TestNGFeature@31f924f5]" name="loginTest" duration-ms="4" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.test.TestNGFeature.loginTest(TestNGFeature.java:10)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="SKIP" signature="homePage()[pri:0, instance:com.test.TestNGFeature@31f924f5]" name="homePage" duration-ms="1" started-at="2019-11-27T22:29:53 IST" depends-on-methods="com.test.TestNGFeature.loginTest" finished-at="2019-11-27T22:29:53 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNGFeature.homePage()[pri:0, instance:com.test.TestNGFeature@31f924f5] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNGFeature.homePage()[pri:0, instance:com.test.TestNGFeature@31f924f5] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homePage -->
        <test-method status="PASS" signature="urlLaunch()[pri:1, instance:com.test.TestNGFeature@31f924f5]" name="urlLaunch" duration-ms="3" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- urlLaunch -->
      </class> <!-- com.test.TestNGFeature -->
      <class name="com.test.TestNGbasics">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeSuite" is-config="true" duration-ms="18" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:27:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeTest" is-config="true" duration-ms="1" started-at="2019-11-27T22:27:03 IST" finished-at="2019-11-27T22:27:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeClass" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="test1" duration-ms="2" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterMethod" is-config="true" duration-ms="7" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="test3" duration-ms="2" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:3, instance:com.test.TestNGbasics@2f0a87b3]" name="test2" duration-ms="2" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.test.TestNGbasics@2f0a87b3]" name="afterSuite" is-config="true" duration-ms="1" started-at="2019-11-27T22:29:54 IST" finished-at="2019-11-27T22:29:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.test.TestNGbasics -->
      <class name="com.test.InvocationCountTest">
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="3" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="6" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="4" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="4" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="2" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="4" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="3" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="1" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.test.InvocationCountTest@5c18298f]" name="test" duration-ms="2" started-at="2019-11-27T22:29:53 IST" finished-at="2019-11-27T22:29:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.test.InvocationCountTest -->
    </test> <!-- Basics TestNG -->
  </suite> <!-- TestNG Suite -->
</testng-results>
